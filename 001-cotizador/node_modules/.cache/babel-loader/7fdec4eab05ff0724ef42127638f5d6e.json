{"ast":null,"code":"import _classCallCheck from \"/home/reynaldo/www/curso-react-y-redux/001-cotizador/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/reynaldo/www/curso-react-y-redux/001-cotizador/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/reynaldo/www/curso-react-y-redux/001-cotizador/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/reynaldo/www/curso-react-y-redux/001-cotizador/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/reynaldo/www/curso-react-y-redux/001-cotizador/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/reynaldo/www/curso-react-y-redux/001-cotizador/src/componentes/App.js\";\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport Formulario from './Formulario';\nimport Resumen from './Resumen';\nimport { obtenerDiferenciaAnio, calcularMarca, obtenerPlan } from '../helper';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      resultado: '',\n      datos: {}\n    };\n\n    _this.cotizarSeguro = function (datos) {\n      var marca = datos.marca,\n          plan = datos.plan,\n          year = datos.year; // Agregar una base de 2000\n\n      var resultado = 2000; // Obtener la diferencia de año  \n\n      var diferencia = obtenerDiferenciaAnio(year); // por cada año restar el 3% al valor del seguro\n\n      resultado -= diferencia * 3 * resultado / 100; // Americano 15% Asiatico 5% y eropeo 30% de incremento al valor actual\n\n      resultado = calcularMarca(marca) * resultado; // el plan del auto, el básico incrementa el valor 20% y cobertura completa 50%\n\n      resultado = obtenerPlan(plan) * resultado; // Arreglar decimales\n\n      resultado = parseFloat(resultado).toFixed(2); // Crear el objeto para el resumen\n\n      var datosAuto = {\n        marca: marca,\n        plan: plan,\n        year: year // Ya tenemos el costo\n\n      };\n\n      _this.setState({\n        resultado: resultado,\n        datos: datosAuto\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"contenedor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Header, {\n        titulo: \"Cotizador de Seguro de Auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"contenedor-formulario\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Formulario, {\n        cotizarSeguro: this.cotizarSeguro,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(Resumen, {\n        datos: this.state.datos,\n        resultado: this.state.resultado,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/reynaldo/www/curso-react-y-redux/001-cotizador/src/componentes/App.js"],"names":["React","Component","Header","Formulario","Resumen","obtenerDiferenciaAnio","calcularMarca","obtenerPlan","App","state","resultado","datos","cotizarSeguro","marca","plan","year","diferencia","parseFloat","toFixed","datosAuto","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAAQC,qBAAR,EAA+BC,aAA/B,EAA8CC,WAA9C,QAAgE,WAAhE;;IAEMC,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAG,EADN;AAENC,MAAAA,KAAK,EAAE;AAFD,K;;UAKRC,a,GAAgB,UAACD,KAAD,EAAW;AAAA,UAClBE,KADkB,GACGF,KADH,CAClBE,KADkB;AAAA,UACXC,IADW,GACGH,KADH,CACXG,IADW;AAAA,UACLC,IADK,GACGJ,KADH,CACLI,IADK,EAGzB;;AACA,UAAIL,SAAS,GAAG,IAAhB,CAJyB,CAMzB;;AACA,UAAMM,UAAU,GAAIX,qBAAqB,CAACU,IAAD,CAAzC,CAPyB,CASzB;;AACAL,MAAAA,SAAS,IAAMM,UAAU,GAAG,CAAd,GAAiBN,SAAlB,GAA6B,GAA1C,CAVyB,CAYzB;;AACAA,MAAAA,SAAS,GAAGJ,aAAa,CAACO,KAAD,CAAb,GAAqBH,SAAjC,CAbyB,CAezB;;AACAA,MAAAA,SAAS,GAAGH,WAAW,CAACO,IAAD,CAAX,GAAkBJ,SAA9B,CAhByB,CAkBzB;;AACAA,MAAAA,SAAS,GAAGO,UAAU,CAACP,SAAD,CAAV,CAAsBQ,OAAtB,CAA8B,CAA9B,CAAZ,CAnByB,CAsBzB;;AACA,UAAMC,SAAS,GAAG;AAChBN,QAAAA,KAAK,EAAEA,KADS;AAEhBC,QAAAA,IAAI,EAAEA,IAFU;AAGhBC,QAAAA,IAAI,EAAEA,IAHU,CAOlB;;AAPkB,OAAlB;;AAQA,YAAKK,QAAL,CAAc;AACZV,QAAAA,SAAS,EAAEA,SADC;AAEZC,QAAAA,KAAK,EAAEQ;AAFK,OAAd;AAID,K;;;;;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAG,6BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AACE,QAAA,aAAa,EAAG,KAAKP,aADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAIE,oBAAC,OAAD;AACE,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,KADpB;AAEE,QAAA,SAAS,EAAI,KAAKF,KAAL,CAAWC,SAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CAFF,CADF;AAiBD;;;;EA9DeT,S;;AAiElB,eAAeO,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Header from './Header';\nimport Formulario from './Formulario';\nimport Resumen from './Resumen';\n\nimport {obtenerDiferenciaAnio, calcularMarca, obtenerPlan} from '../helper';\n\nclass App extends Component {\n\n  state = {\n    resultado : '',\n    datos: {}\n  }\n\n  cotizarSeguro = (datos) => {\n    const {marca, plan, year} = datos;\n\n    // Agregar una base de 2000\n    let resultado = 2000;\n\n    // Obtener la diferencia de año  \n    const diferencia  = obtenerDiferenciaAnio(year);\n\n    // por cada año restar el 3% al valor del seguro\n    resultado -= ((diferencia * 3)*resultado)/100;\n\n    // Americano 15% Asiatico 5% y eropeo 30% de incremento al valor actual\n    resultado = calcularMarca(marca)*resultado;\n\n    // el plan del auto, el básico incrementa el valor 20% y cobertura completa 50%\n    resultado = obtenerPlan(plan)*resultado;\n\n    // Arreglar decimales\n    resultado = parseFloat(resultado).toFixed(2);\n\n\n    // Crear el objeto para el resumen\n    const datosAuto = {\n      marca: marca,\n      plan: plan,\n      year: year\n    }\n\n\n    // Ya tenemos el costo\n    this.setState({\n      resultado: resultado,\n      datos: datosAuto\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"contenedor\">\n        <Header titulo = 'Cotizador de Seguro de Auto' />\n        <div className=\"contenedor-formulario\">\n          <Formulario \n            cotizarSeguro={ this.cotizarSeguro}\n          />\n          <Resumen\n            datos={this.state.datos}\n            resultado = {this.state.resultado}\n          />\n        </div>\n        \n\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}